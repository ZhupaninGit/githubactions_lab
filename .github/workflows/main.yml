name: Flask CI

on:
  push:
    branches:
      - main
      - sbranch
  pull_request:
    branches:
      - main
      - sbranch

jobs:
  lint:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.8
      - name: Install flake8
        run: pip install flake8
      - name: Run flake8
        run: flake8 . --exit-zero

  test:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.8
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Run tests with coverage
        run: |
          coverage run -m pytest
          coverage report --fail-under=50 > coverage.txt
          coverage html
      - name: Extract coverage percentage from HTML
        run: |
          mkdir -p reports
          grep -oP '(?<=<span class="pc_cov">)[0-9]+(?=%</span>)' htmlcov/index.html > reports/coverage_percentage.txt
          cat reports/coverage_percentage.txt
      - name: Upload test reports
        uses: actions/upload-artifact@v4
        with:
          name: test-reports
          path: reports/

  build:
    needs: test
    runs-on: ubuntu-22.04
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Download test coverage report
        uses: actions/download-artifact@v4
        with:
          name: test-reports
          path: reports/
      - name: Create a build artifact with coverage
        run: |
          mkdir build
          if [ -f reports/coverage_percentage.txt ]; then
            COVERAGE=$(cat reports/coverage_percentage.txt)
          else
            COVERAGE="No coverage data"
          fi
          echo "Build completed." > build/build.txt
          echo "Test coverage: ${COVERAGE}" >> build/build.txt
      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: build-artifact
          path: build/
